[{"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\index.js":"1","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\apolloClient.js":"2","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\App.js":"3","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\context\\state.js":"4","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\context\\auth.js":"5","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\backendUrls.js":"6","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\utils\\localStorage.js":"7","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Routes.js":"8","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\styles\\muiStyles.js":"9","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\styles\\customTheme.js":"10","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\NavBar.js":"11","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\ToastNotification.js":"12","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\UserButtonsDesktop.js":"13","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\RegisterForm.js":"14","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\LoginForm.js":"15","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\UserMenuMobile.js":"16","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\MobileMain.js":"17","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Main.js":"18","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Conversation.js":"19","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Groups.js":"20","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Users.js":"21","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\LatestMessages.js":"22","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\TabBar.js":"23","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\utils\\helperFuncs.js":"24","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\LoadingSpinner.js":"25","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\FilterBar.js":"26","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\queries.js":"27","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\SendMessage.js":"28","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\ConversationHeader.js":"29","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\MessageBubble.js":"30","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\subscriptions.js":"31","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\LatestMessage.js":"32","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\EmojiPicker.js":"33","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\fragments.js":"34","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\mutations.js":"35","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\AddGroupMembers.js":"36","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\GroupInfo.js":"37","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\ErrorMessage.js":"38","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DialogBox.js":"39","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\EditGroupName.js":"40","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DeleteDialog.js":"41","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\MuiCustomDialogTitle.js":"42","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\CreateGroup.js":"43","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DarkModeSwitch.js":"44","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DemoCredsBox.js":"45","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\data\\demoCreds.js":"46"},{"size":632,"mtime":1726191043896,"results":"47","hashOfConfig":"48"},{"size":1487,"mtime":1726191043887,"results":"49","hashOfConfig":"48"},{"size":769,"mtime":1726191043886,"results":"50","hashOfConfig":"48"},{"size":3665,"mtime":1726191043893,"results":"51","hashOfConfig":"48"},{"size":1304,"mtime":1726191043893,"results":"52","hashOfConfig":"48"},{"size":263,"mtime":1726205781828,"results":"53","hashOfConfig":"48"},{"size":662,"mtime":1726191043908,"results":"54","hashOfConfig":"48"},{"size":1077,"mtime":1726191043906,"results":"55","hashOfConfig":"48"},{"size":10319,"mtime":1726191043906,"results":"56","hashOfConfig":"48"},{"size":1363,"mtime":1726206703004,"results":"57","hashOfConfig":"48"},{"size":2889,"mtime":1726211032137,"results":"58","hashOfConfig":"48"},{"size":679,"mtime":1726191043891,"results":"59","hashOfConfig":"48"},{"size":2951,"mtime":1726191043892,"results":"60","hashOfConfig":"48"},{"size":7336,"mtime":1726211273619,"results":"61","hashOfConfig":"48"},{"size":5234,"mtime":1726211248557,"results":"62","hashOfConfig":"48"},{"size":3765,"mtime":1726191043892,"results":"63","hashOfConfig":"48"},{"size":868,"mtime":1726191043905,"results":"64","hashOfConfig":"48"},{"size":986,"mtime":1726191043904,"results":"65","hashOfConfig":"48"},{"size":9012,"mtime":1726209135481,"results":"66","hashOfConfig":"48"},{"size":2684,"mtime":1726191043902,"results":"67","hashOfConfig":"48"},{"size":2662,"mtime":1726191043905,"results":"68","hashOfConfig":"48"},{"size":4358,"mtime":1726297540853,"results":"69","hashOfConfig":"48"},{"size":785,"mtime":1726191043891,"results":"70","hashOfConfig":"48"},{"size":1247,"mtime":1726191043907,"results":"71","hashOfConfig":"48"},{"size":362,"mtime":1726191043889,"results":"72","hashOfConfig":"48"},{"size":706,"mtime":1726191043889,"results":"73","hashOfConfig":"48"},{"size":1183,"mtime":1726191043895,"results":"74","hashOfConfig":"48"},{"size":3466,"mtime":1726191043905,"results":"75","hashOfConfig":"48"},{"size":5187,"mtime":1726289251604,"results":"76","hashOfConfig":"48"},{"size":827,"mtime":1726191043904,"results":"77","hashOfConfig":"48"},{"size":281,"mtime":1726191043895,"results":"78","hashOfConfig":"48"},{"size":1119,"mtime":1726209198274,"results":"79","hashOfConfig":"48"},{"size":1555,"mtime":1726191043889,"results":"80","hashOfConfig":"48"},{"size":649,"mtime":1726191043895,"results":"81","hashOfConfig":"48"},{"size":2432,"mtime":1726191043895,"results":"82","hashOfConfig":"48"},{"size":4024,"mtime":1726191043897,"results":"83","hashOfConfig":"48"},{"size":6895,"mtime":1726191043902,"results":"84","hashOfConfig":"48"},{"size":437,"mtime":1726191043889,"results":"85","hashOfConfig":"48"},{"size":802,"mtime":1726191043888,"results":"86","hashOfConfig":"48"},{"size":3679,"mtime":1726191043902,"results":"87","hashOfConfig":"48"},{"size":2555,"mtime":1726191043888,"results":"88","hashOfConfig":"48"},{"size":1444,"mtime":1726191043890,"results":"89","hashOfConfig":"48"},{"size":4927,"mtime":1726191043898,"results":"90","hashOfConfig":"48"},{"size":672,"mtime":1726191043887,"results":"91","hashOfConfig":"48"},{"size":432,"mtime":1726191043888,"results":"92","hashOfConfig":"48"},{"size":107,"mtime":1726191043893,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"14b7n1l",{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"96"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"96"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\index.js",[],["190","191"],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\apolloClient.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\App.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\context\\state.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\context\\auth.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\backendUrls.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\utils\\localStorage.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Routes.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\styles\\muiStyles.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\styles\\customTheme.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\NavBar.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\ToastNotification.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\UserButtonsDesktop.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\RegisterForm.js",["192"],"import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useApolloClient } from '@apollo/client';\r\nimport { useMutation } from '@apollo/client';\r\nimport { REGISTER_USER } from '../graphql/mutations';\r\nimport { useAuthContext } from '../context/auth';\r\nimport { useStateContext } from '../context/state';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport DemoCredsBox from '../components/DemoCredsBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { getErrorMsg } from '../utils/helperFuncs';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Link,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useAuthFormStyles } from '../styles/muiStyles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport EnhancedEncryptionIcon from '@material-ui/icons/EnhancedEncryption';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .required('Required')\r\n    .max(20, 'Must be at most 20 characters')\r\n    .min(3, 'Must be at least 3 characters')\r\n    .matches(\r\n      /^[a-zA-Z0-9-_]*$/,\r\n      'Only alphanum, dash & underscore characters are allowed'\r\n    ),\r\n  password: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Must be at least 6 characters'),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required('Required')\r\n    .min(6, 'Must be at least 6 characters'),\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const [showConfPass, setShowConfPass] = useState(false);\r\n  const classes = useAuthFormStyles();\r\n  const { setUser } = useAuthContext();\r\n  const { notify } = useStateContext();\r\n  const { register, handleSubmit, reset, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const client = useApolloClient();\r\n  const [registerUser, { loading }] = useMutation(REGISTER_USER, {\r\n    onError: (err) => {\r\n      setErrorMsg(getErrorMsg(err));\r\n    },\r\n  });\r\n\r\n  const onRegister = ({ username, password, confirmPassword }) => {\r\n    if (password !== confirmPassword)\r\n      return setErrorMsg('Both passwords need to match.');\r\n\r\n    registerUser({\r\n      variables: { username, password },\r\n      update: (_, { data }) => {\r\n        setUser(data.register);\r\n        notify(\r\n          `Welcome, ${data.register.username}! You've successfully registered.`\r\n        );\r\n        reset();\r\n      },\r\n    });\r\n    client.clearStore();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h4\" color=\"secondary\" className={classes.title}>\r\n          Welcome to <strong>Chat4Event</strong>\r\n        </Typography>\r\n        <form onSubmit={handleSubmit(onRegister)} className={classes.form}>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              error={'username' in errors}\r\n              helperText={'username' in errors ? errors.username.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"password\"\r\n              type={showPass ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              error={'password' in errors}\r\n              helperText={'password' in errors ? errors.password.message : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showPass ? (\r\n                        <VisibilityOffIcon color=\"secondary\" />\r\n                      ) : (\r\n                        <VisibilityIcon color=\"secondary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"confirmPassword\"\r\n              type={showConfPass ? 'text' : 'password'}\r\n              label=\"Confirm Password\"\r\n              variant=\"outlined\"\r\n              error={'confirmPassword' in errors}\r\n              helperText={\r\n                'confirmPassword' in errors\r\n                  ? errors.confirmPassword.message\r\n                  : ''\r\n              }\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowConfPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showConfPass ? (\r\n                        <VisibilityOffIcon color=\"secondary\" />\r\n                      ) : (\r\n                        <VisibilityIcon color=\"secondary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <EnhancedEncryptionIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            startIcon={<PersonAddIcon />}\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={classes.submitButton}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body1\" className={classes.footerText}>\r\n          Already have an account?{' '}\r\n          <Link className={classes.link} component={RouterLink} to=\"/login\">\r\n            Log In\r\n          </Link>\r\n        </Typography>\r\n        <ErrorMessage\r\n          errorMsg={errorMsg}\r\n          clearErrorMsg={() => setErrorMsg(null)}\r\n        />\r\n        {/* <DemoCredsBox /> */}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\LoginForm.js",["193"],"import { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useApolloClient } from '@apollo/client';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../graphql/mutations';\r\nimport { useAuthContext } from '../context/auth';\r\nimport { useStateContext } from '../context/state';\r\nimport ErrorMessage from '../components/ErrorMessage';\r\nimport DemoCredsBox from '../components/DemoCredsBox';\r\nimport * as yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { getErrorMsg } from '../utils/helperFuncs';\r\n\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  Link,\r\n  Container,\r\n} from '@material-ui/core';\r\nimport { useAuthFormStyles } from '../styles/muiStyles';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string().required('Required'),\r\n  password: yup.string().required('Required'),\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [errorMsg, setErrorMsg] = useState(null);\r\n  const classes = useAuthFormStyles();\r\n  const { setUser } = useAuthContext();\r\n  const { notify } = useStateContext();\r\n  const { register, handleSubmit, reset, errors } = useForm({\r\n    mode: 'onChange',\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n  const client = useApolloClient();\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    onError: (err) => {\r\n      setErrorMsg(getErrorMsg(err));\r\n    },\r\n  });\r\n\r\n  const onLogin = ({ username, password }) => {\r\n    loginUser({\r\n      variables: { username, password },\r\n      update: (_, { data }) => {\r\n        setUser(data.login);\r\n        notify(`Welcome, ${data.login.username}! You're logged in.`);\r\n        reset();\r\n      },\r\n    });\r\n    client.clearStore();\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.root}>\r\n        <Typography variant=\"h4\" color=\"secondary\" className={classes.title}>\r\n          Login to your <strong>Chat4Event</strong> account\r\n        </Typography>\r\n        <form onSubmit={handleSubmit(onLogin)} className={classes.form}>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"username\"\r\n              type=\"text\"\r\n              label=\"Username\"\r\n              variant=\"outlined\"\r\n              error={'username' in errors}\r\n              helperText={'username' in errors ? errors.username.message : ''}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <PersonIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <div className={classes.inputField}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              inputRef={register}\r\n              name=\"password\"\r\n              type={showPass ? 'text' : 'password'}\r\n              label=\"Password\"\r\n              variant=\"outlined\"\r\n              error={'password' in errors}\r\n              helperText={'password' in errors ? errors.password.message : ''}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      onClick={() => setShowPass((prevState) => !prevState)}\r\n                      size=\"small\"\r\n                    >\r\n                      {showPass ? (\r\n                        <VisibilityOffIcon color=\"secondary\" />\r\n                      ) : (\r\n                        <VisibilityIcon color=\"secondary\" />\r\n                      )}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                ),\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <LockIcon color=\"primary\" />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n          </div>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            fullWidth\r\n            startIcon={<ExitToAppIcon />}\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className={classes.submitButton}\r\n          >\r\n            Log In\r\n          </Button>\r\n        </form>\r\n        <Typography variant=\"body1\" className={classes.footerText}>\r\n          Don’t have an account?{' '}\r\n          <Link className={classes.link} component={RouterLink} to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </Typography>\r\n        <ErrorMessage\r\n          errorMsg={errorMsg}\r\n          clearErrorMsg={() => setErrorMsg(null)}\r\n        />\r\n        {/* <DemoCredsBox /> */}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\UserMenuMobile.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\MobileMain.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Main.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Conversation.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Groups.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\Users.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\LatestMessages.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\TabBar.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\utils\\helperFuncs.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\LoadingSpinner.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\FilterBar.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\queries.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\SendMessage.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\ConversationHeader.js",["194"],"import { useState } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { GET_ALL_USERS } from '../../graphql/queries';\r\nimport DialogBox from '../../components/DialogBox';\r\nimport GroupInfo from './GroupInfo';\r\nimport AddGroupMembers from './AddGroupMembers';\r\nimport { useAuthContext } from '../../context/auth';\r\nimport { useStateContext } from '../../context/state';\r\nimport { truncateString, getErrorMsg } from '../../utils/helperFuncs';\r\n\r\nimport {\r\n  Typography,\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  useMediaQuery,\r\n} from '@material-ui/core';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { useConversationPageStyles } from '../../styles/muiStyles';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport MenuOpenIcon from '@material-ui/icons/MenuOpen';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nconst ConversationHeader = () => {\r\n  const classes = useConversationPageStyles();\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const { user } = useAuthContext();\r\n  const { unselectChat, selectedChat, notify } = useStateContext();\r\n  const [infoModal, setInfoModal] = useState(false);\r\n  const [addModal, setAddModal] = useState(false);\r\n  const { data: userData, loading: loadingUsers } = useQuery(GET_ALL_USERS, {\r\n    onError: (err) => {\r\n      notify(getErrorMsg(err), 'error');\r\n    },\r\n  });\r\n\r\n  const chatData = selectedChat?.chatData || {};\r\n  const { id, username, name, participants, admin } = selectedChat.chatData;\r\n\r\n  const conversationDetails = () => {\r\n    return (\r\n      <>\r\n        <Avatar className={classes.avatar}>\r\n          {selectedChat.chatType === 'public' ? (\r\n            <LanguageIcon color=\"primary\" />\r\n          ) : selectedChat.chatType === 'group' ? (\r\n            <GroupIcon color=\"primary\" />\r\n          ) : (\r\n            <Avatar\r\n              alt={username}\r\n              src={`https://secure.gravatar.com/avatar/${id}?s=150&d=retro`}\r\n            />\r\n          )}\r\n        </Avatar>\r\n        <Typography\r\n          color=\"secondary\"\r\n          variant={isMobile ? 'subtitle2' : 'h6'}\r\n          className={classes.titleText}\r\n        >\r\n          {selectedChat.chatType === 'private'\r\n            ? isMobile\r\n              ? truncateString(username, 12)\r\n              : username\r\n            : isMobile\r\n            ? truncateString(name, 12)\r\n            : name}\r\n        </Typography>\r\n        {selectedChat.chatType === 'group' && participants && (\r\n          <Typography\r\n            color=\"secondary\"\r\n            variant={isMobile ? 'caption' : 'body1'}\r\n          >\r\n            ({participants.length}{' '}\r\n            {participants.length > 1 ? 'members' : 'member'})\r\n          </Typography>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.conversationHeader}>\r\n      <div className={classes.leftBtns}>\r\n        {isMobile && selectedChat && (\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            startIcon={<ArrowBackIcon />}\r\n            onClick={() => unselectChat()}\r\n          >\r\n            Back\r\n          </Button>\r\n        )}\r\n        {selectedChat.chatType === 'group' ? (\r\n          <Button\r\n            className={classes.headerTitle}\r\n            onClick={() => setInfoModal(true)}\r\n            size=\"small\"\r\n          >\r\n            {conversationDetails()}\r\n          </Button>\r\n        ) : (\r\n          <div className={classes.headerTitle}>{conversationDetails()}</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className={classes.rightHeaderBtns}>\r\n        {admin === user.id && (\r\n          <DialogBox\r\n            modalOpen={addModal}\r\n            setModalOpen={setAddModal}\r\n            title=\"Add Members\"\r\n            triggerButton={\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => setAddModal(true)}\r\n                size=\"small\"\r\n                style={{ marginRight: 10 }}\r\n              >\r\n                <GroupAddIcon fontSize={isMobile ? 'medium' : 'large'} />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <AddGroupMembers\r\n              userData={userData}\r\n              closeModal={() => setAddModal(false)}\r\n            />\r\n          </DialogBox>\r\n        )}\r\n        {selectedChat.chatType === 'group' && (\r\n          <DialogBox\r\n            modalOpen={infoModal}\r\n            setModalOpen={setInfoModal}\r\n            title=\"Group Info\"\r\n            triggerButton={\r\n              <IconButton\r\n                color=\"primary\"\r\n                onClick={() => setInfoModal(true)}\r\n                size=\"small\"\r\n              >\r\n                <MenuOpenIcon fontSize={isMobile ? 'medium' : 'large'} />\r\n              </IconButton>\r\n            }\r\n          >\r\n            <GroupInfo\r\n              userData={userData}\r\n              loadingUsers={loadingUsers}\r\n              closeModal={() => setInfoModal(false)}\r\n            />\r\n          </DialogBox>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConversationHeader;\r\n","E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\MessageBubble.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\subscriptions.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\LatestMessage.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\EmojiPicker.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\fragments.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\graphql\\mutations.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\AddGroupMembers.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\GroupInfo.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\ErrorMessage.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DialogBox.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\EditGroupName.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DeleteDialog.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\MuiCustomDialogTitle.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\pages\\Main\\CreateGroup.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DarkModeSwitch.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\components\\DemoCredsBox.js",[],"E:\\@Mine@\\11.MultiFunctionChat\\client\\src\\data\\demoCreds.js",[],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":10,"column":8,"nodeType":"201","messageId":"202","endLine":10,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":10,"column":8,"nodeType":"201","messageId":"202","endLine":10,"endColumn":20},{"ruleId":"199","severity":1,"message":"203","line":40,"column":9,"nodeType":"201","messageId":"202","endLine":40,"endColumn":17},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'DemoCredsBox' is defined but never used.","Identifier","unusedVar","'chatData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]